version: '3.9'

services:
  postgres:
    container_name: postgres
    build:
      context: ./docker/postgres
    image: postgres:12.7-alpine3.14
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DATABASE}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - ./${POSTGRES_STORE}:/var/lib/postgresql/data
    healthcheck:
      test: [ CMD-SHELL, -U postgres, pg_isready ]
      interval: 2s
      timeout: 5s
      retries: 10
  mlflow:
    container_name: mlflow
    build:
      context: ./docker/mlflow
      args:
        - MLFLOW_VERSION=${MLFLOW_VERSION}
    image: ghcr.io/mlflow/mlflow:v2.9.2
    expose:
      - "${MLFLOW_TRACKING_SERVER_PORT}"
    ports:
      - "${MLFLOW_TRACKING_SERVER_PORT}:${MLFLOW_TRACKING_SERVER_PORT}"
    depends_on:
      - postgres
    environment:
      MLFLOW_TRACKING_SERVER_HOST: ${MLFLOW_TRACKING_SERVER_HOST}
      MLFLOW_TRACKING_SERVER_PORT: ${MLFLOW_TRACKING_SERVER_PORT}
      MLFLOW_ARTIFACT_STORE: ${MLFLOW_ARTIFACT_STORE}
      MLFLOW_BACKEND_STORE: ${MLFLOW_BACKEND_STORE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_PORT: ${POSTGRES_PORT}
    volumes:
      - ./${MLFLOW_ARTIFACT_STORE}:/${MLFLOW_ARTIFACT_STORE}

